 generator client {
   provider = "prisma-client-js"
 }
 
 datasource db {

  provider = "postgresql"
  // "DATABASE_URL"
  // const conString = "postgres://YourUserName:YourPassword@YourHostname:5432/YourDatabaseName";
  url = env("DATABASE_URL")
}

enum UserRole {
  STUDENT
  TEACHER
}

// TODO: define fields and relations
model User {
  id        Int    @default(autoincrement()) @id
  email     String @unique
  firstName String
  lastName  String
  social    Json?

  // Relation fields
  courses     CourseEnrollment[]
  testResults TestResult[]        @relation(name: "results")
  testsGraded TestResult[]        @relation(name: "graded")
}

// TODO: define fields and relations
model Course {
  id            Int @default(autoincrement()) @id
  name          String
  courseDetails String

  // Relation fields
  members       CourseEnrollment[]
  tests         Test[]
}

model CourseEnrollment {
  createdAt DateTime  @default(now())
  role      UserRole

  // Relation Fields
  userId    Int
  user      User      @relation(fields: [userId], references: [id])

  courseId  Int
  course    Course    @relation(fields: [courseId], references: [id])

  @@id([userId, courseId])
  @@index([userId, role])
}

// TODO: define fields and relations
model Test {
  id        Int       @default(autoincrement()) @id
  updatedAt DateTime  @updatedAt
  name      String
  date      DateTime // @default(now())

  // Relation Fields
  courseId      Int
  course        Course    @relation(fields: [courseId], references: [id])
  testResults   TestResult[]
}

// TODO: define fields and relations
model TestResult {
  id        Int       @default(autoincrement()) @id
  createdAt DateTime  @default(now())
  result    Int // Percentage precise to one decimal point represented as `result * 10^-1`

  // Relation Fields
  studentId   Int
  student     User @relation(name: "results", fields: [studentId], references: [id])
  graderId    Int
  gradedBy    User @relation(name: "graded", fields: [graderId], references: [id])
  testId      Int
  test        Test @relation(fields: [testId], references: [id])
}
